{"version":3,"file":"ContactSection-F2Wq3QDb.js","sources":["../../node_modules/emailjs-com/es/store/store.js","../../node_modules/emailjs-com/es/methods/init/init.js","../../node_modules/emailjs-com/es/utils/validateParams.js","../../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../../node_modules/emailjs-com/es/api/sendPost.js","../../node_modules/emailjs-com/es/methods/send/send.js","../../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","../../node_modules/emailjs-com/es/index.js","../../src/components/ContactSection.tsx"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import React, { useState, useCallback } from 'react'; // Added useState, useCallback\nimport emailjs from 'emailjs-com'; // Added emailjs import\n\n// --- Moved from App.tsx ---\nconst RATE_LIMIT_DURATION = 60000;\nlet lastSubmissionTime = 0;\n\nconst validateEmail = (email: string): boolean => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\nconst validateMessage = (message: string): boolean => {\n  return message.length >= 10 && message.length <= 1000;\n};\n// --- End Moved from App.tsx ---\n\n\ninterface ContactSectionProps {\n  t: {\n    title: string;\n    nameLabel: string;\n    emailLabel: string;\n    messageLabel: string;\n    namePlaceholder: string;\n    emailPlaceholder: string;\n    messagePlaceholder: string;\n    submitButton: string;\n  };\n  // Removed handleSubmit, formData, handleInputChange props\n}\n\nconst ContactSection: React.FC<ContactSectionProps> = ({ t }) => { // Removed props from destructuring\n  // --- Moved from App.tsx ---\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: '',\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  }, []);\n\n  const handleSubmit = useCallback(async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const now = Date.now();\n    if (now - lastSubmissionTime < RATE_LIMIT_DURATION) {\n      alert('Please wait a minute before sending another message.');\n      return;\n    }\n\n    if (!validateEmail(formData.email)) {\n      alert('Please enter a valid email address.');\n      return;\n    }\n\n    if (!validateMessage(formData.message)) {\n      alert('Message must be between 10 and 1000 characters.');\n      return;\n    }\n\n    lastSubmissionTime = now;\n\n    try {\n      // Consider moving User ID to environment variables or config\n      emailjs.init(\"skwn_-DYfDakGK644\");\n\n      await emailjs.send(\n        // Consider moving Service ID and Template ID to environment variables or config\n        \"service_bdj14o3\",\n        \"template_2e2nikq\",\n        {\n          name: formData.name,\n          email: formData.email,\n          message: formData.message,\n          to_email: 'tiger3homs@gmail.com', // Consider moving recipient email to config\n        }\n      );\n\n      alert('Message sent successfully!');\n      setFormData({ name: '', email: '', message: '' }); // Reset form\n    } catch (error) {\n      console.error('Failed to send message:', error);\n      alert('Failed to send message. Please try again.');\n    }\n  }, [formData]); // Dependency array includes formData\n  // --- End Moved from App.tsx ---\n  return (\n    // Added shadow-xl, rounded-lg, and background color using the unified CSS variable\n    <section\n      className=\"container mx-auto px-4 py-16 rounded-lg shadow-xl bg-gray-800/50 backdrop-blur-sm\" // Removed bg-gray-800/50\n       // Use unified CSS variable\n    >\n      {/* Added background, padding, rounding, and shadow to the form container div */}\n      <div className=\"sectionbg max-w-3xl mx-auto p-8 rounded-lg shadow-lg \" >\n        <h2 className=\"text-3xl font-bold text-center mb-8 \" style={{ color: 'var(--title-color)' }}>{t.title}</h2>\n        {/* Use the local handleSubmit */}\n        <form onSubmit={handleSubmit} className=\"mt-8\" >\n          <div className=\"mb-4\">\n            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-300\" style={{ color: 'var(--h3title-color)' }}>\n              {t.nameLabel}\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleInputChange} // Use local handleInputChange\n              placeholder={t.namePlaceholder}\n              className=\"mt-1 block w-full rounded-md  bg-gray-800/50 text-white border-gray-500 focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-300\" style={{ color: 'var(--h3title-color)' }}>\n              {t.emailLabel}\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleInputChange} // Use local handleInputChange\n              placeholder={t.emailPlaceholder}\n              className=\"mt-1 block w-full rounded-md  bg-gray-800/50 text-white border-gray-500 focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-300\" style={{ color: 'var(--h3title-color)' }}>\n              {t.messageLabel}\n            </label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              value={formData.message}\n              onChange={handleInputChange} // Use local handleInputChange\n              placeholder={t.messagePlaceholder}\n              className=\"mt-1 block w-full rounded-md  bg-gray-800/50 text-white border-gray-500 focus:ring-blue-500 focus:border-blue-500\"\n              rows={4}\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-gray-900 text-white rounded hover:bg-blue-900 transition\"\n          >\n            {t.submitButton}\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default ContactSection;\n"],"names":["store","init","userID","origin","validateParams","serviceID","templateID","EmailJSResponseStatus","httpResponse","sendPost","url","data","headers","resolve","reject","xhr","target","responseStatus","key","send","templatePrams","uID","findHTMLForm","form","currentForm","sendForm","formData","emailjs","RATE_LIMIT_DURATION","lastSubmissionTime","validateEmail","email","validateMessage","message","ContactSection","setFormData","useState","handleInputChange","useCallback","e","name","value","prev","handleSubmit","now","error","jsx","jsxs"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}